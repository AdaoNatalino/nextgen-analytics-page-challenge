{"ast":null,"code":"var _jsxFileName = \"/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/LineChart.jsx\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\"; // import Chart from \"chart.min.js\";\n\nimport './App.scss';\nexport default class LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [{\n          label: \"Sales\",\n          data: [86, 67, 91]\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: Container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/LineChart.jsx"],"names":["React","Component","Chart","LineChart","chartRef","createRef","componentDidMount","myChartRef","current","getContext","type","data","labels","datasets","label","options","render","Container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,OAAO,YAAP;AACA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CG,QAD+C,GACpCJ,KAAK,CAACK,SAAN,EADoC;AAAA;;AAG/CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIP,KAAJ,CAAUK,UAAV,EAAsB;AAClBG,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFN;AAGFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,OADX;AAEIH,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFV,SADM;AAHR,OAFY;AAYlBI,MAAAA,OAAO,EAAE,CACL;AADK;AAZS,KAAtB;AAgBH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAEC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKb,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAhC8C","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n// import Chart from \"chart.min.js\";\nimport './App.scss';\nexport default class LineChart extends Component {\n  chartRef = React.createRef();\n  \n  componentDidMount() {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      \n      new Chart(myChartRef, {\n          type: \"line\",\n          data: {\n              //Bring in data\n              labels: [\"Jan\", \"Feb\", \"March\"],\n              datasets: [\n                  {\n                      label: \"Sales\",\n                      data: [86, 67, 91],\n                  }\n              ]\n          },\n          options: {\n              //Customize chart options\n          }\n      });\n  }\n  render() {\n      return (\n          <div className={Container}>\n              <canvas\n                  id=\"myChart\"\n                  ref={this.chartRef}\n              />\n          </div>\n      )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}