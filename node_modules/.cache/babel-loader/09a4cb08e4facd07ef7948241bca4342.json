{"ast":null,"code":"var _jsxFileName = \"/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/TotalSignups.jsx\";\nimport React, { Component } from \"react\";\nimport \"zingchart/es6\";\nimport ZingChart from \"zingchart-react\";\nimport axios from 'axios';\nimport USERS from './data/users';\n\nclass TotalSignups extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:61022/Api/Charts/Getrecord`).then(res => {\n      console.log(res);\n      const ipl = res.data;\n      let playername = [];\n      let runscore = [];\n      ipl.forEach(record => {\n        playername.push(record.Playername);\n        runscore.push(record.Runscore);\n      });\n      this.setState({\n        Data: {\n          labels: playername,\n          datasets: [{\n            label: 'IPL 2018/2019 Top Run Scorer',\n            data: runscore,\n            backgroundColor: [\"#3cb371\", \"#0000FF\", \"#9966FF\", \"#4C4CFF\", \"#00FFFF\", \"#f990a7\", \"#aad2ed\", \"#FF00FF\", \"Blue\", \"Red\"]\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(USERS, {\n      data: this.state.Data,\n      options: {\n        maintainAspectRatio: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\n\nexport default TotalSignups;","map":{"version":3,"sources":["/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/TotalSignups.jsx"],"names":["React","Component","ZingChart","axios","USERS","TotalSignups","render","constructor","props","state","Data","componentDidMount","get","then","res","console","log","ipl","data","playername","runscore","forEach","record","push","Playername","Runscore","setState","labels","datasets","label","backgroundColor","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAE7BK,EAAAA,MAAM,GAAG;AAEP,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAQD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEX,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAEP;;AAEDC,EAAAA,iBAAiB,GAAG;AAEZR,IAAAA,KAAK,CAACS,GAAN,CAAW,6CAAX,EAECC,IAFD,CAEMC,GAAG,IAAI;AAETC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,YAAMG,GAAG,GAAGH,GAAG,CAACI,IAAhB;AAEY,UAAIC,UAAU,GAAG,EAAjB;AAEA,UAAIC,QAAQ,GAAG,EAAf;AAEAH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,MAAM,IAAI;AAEdH,QAAAA,UAAU,CAACI,IAAX,CAAgBD,MAAM,CAACE,UAAvB;AAEAJ,QAAAA,QAAQ,CAACG,IAAT,CAAcD,MAAM,CAACG,QAArB;AAEP,OAND;AAQA,WAAKC,QAAL,CAAc;AAENhB,QAAAA,IAAI,EAAE;AAEEiB,UAAAA,MAAM,EAAER,UAFV;AAIES,UAAAA,QAAQ,EAAE,CAEF;AAEQC,YAAAA,KAAK,EAAE,8BAFf;AAIQX,YAAAA,IAAI,EAAEE,QAJd;AAMQU,YAAAA,eAAe,EAAE,CAET,SAFS,EAIT,SAJS,EAMT,SANS,EAQT,SARS,EAUT,SAVS,EAYT,SAZS,EAcT,SAdS,EAgBT,SAhBS,EAkBT,MAlBS,EAoBT,KApBS;AANzB,WAFE;AAJZ;AAFA,OAAd;AA8CP,KAlET;AAoEP;;AAEDxB,EAAAA,MAAM,GAAG;AAED,wBAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEF,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,IAAxB;AAEkB,MAAA,OAAO,EAAE;AAAEqB,QAAAA,mBAAmB,EAAE;AAAvB,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,CAFR;AAYP;;AA5G4B;;AAkHrC,eAAgB1B,YAAhB","sourcesContent":["import React, { Component } from \"react\";\nimport \"zingchart/es6\";\nimport ZingChart from \"zingchart-react\";\nimport axios from 'axios';  \nimport USERS from './data/users'\nclass TotalSignups extends Component {\n \n        render() {  \n \n          return (  \n\n            <div>  \n\n            </div>  \n \n                )  \n \n        }  \n        \n        constructor(props) {  \n \n                super(props);  \n \n                this.state = { Data: {} };  \n \n        }  \n \n        componentDidMount() {  \n \n                axios.get(`http://localhost:61022/Api/Charts/Getrecord`)  \n \n                .then(res => {  \n \n                    console.log(res);  \n \n                    const ipl = res.data;  \n \n                                let playername = [];  \n \n                                let runscore = [];  \n \n                                ipl.forEach(record => {  \n \n                                        playername.push(record.Playername);  \n \n                                        runscore.push(record.Runscore);  \n \n                                });  \n \n                                this.setState({  \n \n                                        Data: {  \n \n                                                labels: playername,  \n \n                                                datasets: [  \n \n                                                        {  \n \n                                                                label: 'IPL 2018/2019 Top Run Scorer',  \n \n                                                                data: runscore,  \n \n                                                                backgroundColor: [  \n \n                                                                        \"#3cb371\",  \n \n                                                                        \"#0000FF\",  \n \n                                                                        \"#9966FF\",  \n \n                                                                        \"#4C4CFF\",  \n \n                                                                        \"#00FFFF\",  \n \n                                                                        \"#f990a7\",  \n \n                                                                        \"#aad2ed\",  \n \n                                                                        \"#FF00FF\",  \n \n                                                                        \"Blue\",  \n \n                                                                        \"Red\"  \n \n                                                                ]  \n \n                                                        }  \n \n                                                ]  \n \n                                        }  \n \n                                });  \n \n                        })  \n \n        }  \n \n        render() {  \n \n                return (  \n\n                        <div>  \n \n                      <USERS data={this.state.Data}  \n \n                                        options={{ maintainAspectRatio: false }} ></USERS>  \n \n                        </div>  \n \n                )  \n \n        }  \n \n}  \n \n  \n \nexport default  TotalSignups; \n"]},"metadata":{},"sourceType":"module"}