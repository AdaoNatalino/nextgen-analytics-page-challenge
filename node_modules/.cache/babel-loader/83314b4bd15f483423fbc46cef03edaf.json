{"ast":null,"code":"var _jsxFileName = \"/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/LineChart.jsx\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\"; // import Chart from \"chart.min.js\";\n\nimport './App.scss';\nexport default class LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jun19\", \"Jul19\", \"Aug19\", \"Sep19\", \"Oct19\", \"Nov19\", \"Dec19\"],\n        datasets: [{\n          label: \"Individuals\",\n          fillColor: \"rgba(220,220,220,0.2)\",\n          strokeColor: \"rgba(220,220,220,1)\",\n          pointColor: \"rgba(220,220,220,1)\",\n          pointStrokeColor: \"#fff\",\n          pointHighlightFill: \"#fff\",\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\n          data: [88, 25, 80, 81, 56, 55, 40]\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/LineChart.jsx"],"names":["React","Component","Chart","LineChart","chartRef","createRef","componentDidMount","myChartRef","current","getContext","type","data","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","options","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,OAAO,YAAP;AACA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CG,QAD+C,GACpCJ,KAAK,CAACK,SAAN,EADoC;AAAA;;AAG/CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIP,KAAJ,CAAUK,UAAV,EAAsB;AAClBG,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,CAFN;AAGFC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,aADT;AAEEC,UAAAA,SAAS,EAAE,uBAFb;AAGEC,UAAAA,WAAW,EAAE,qBAHf;AAIEC,UAAAA,UAAU,EAAE,qBAJd;AAKEC,UAAAA,gBAAgB,EAAE,MALpB;AAMEC,UAAAA,kBAAkB,EAAE,MANtB;AAOEC,UAAAA,oBAAoB,EAAE,qBAPxB;AAQET,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AARR,SADQ;AAHR,OAFY;AAkBlBU,MAAAA,OAAO,EAAE,CACL;AADK;AAlBS,KAAtB;AAsBH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKlB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAtC8C","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n// import Chart from \"chart.min.js\";\nimport './App.scss';\nexport default class LineChart extends Component {\n  chartRef = React.createRef();\n  \n  componentDidMount() {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      \n      new Chart(myChartRef, {\n          type: \"line\",\n          data: {\n              //Bring in data\n              labels: [\"Jun19\", \"Jul19\", \"Aug19\", \"Sep19\", \"Oct19\", \"Nov19\", \"Dec19\"],\n              datasets: [\n                {\n                  label: \"Individuals\",\n                  fillColor: \"rgba(220,220,220,0.2)\",\n                  strokeColor: \"rgba(220,220,220,1)\",\n                  pointColor: \"rgba(220,220,220,1)\",\n                  pointStrokeColor: \"#fff\",\n                  pointHighlightFill: \"#fff\",\n                  pointHighlightStroke: \"rgba(220,220,220,1)\",\n                  data: [88, 25, 80, 81, 56, 55, 40]\n                },\n              ]\n          },\n          options: {\n              //Customize chart options\n          }\n      });\n  }\n  render() {\n      return (\n          <div className=\"container\">\n              <canvas\n                  id=\"myChart\"\n                  ref={this.chartRef}\n              />\n          </div>\n      )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}