{"ast":null,"code":"var _jsxFileName = \"/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/VioletChart.jsx\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\"; // import Chart from \"chart.min.js\";\n\nimport './App.scss';\nexport default class VioletChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.refViolet = React.createRef();\n  }\n\n  componentDidMount() {\n    const violetChartRef = this.refViolet.current.getContext(\"2d\");\n    new Chart(violetChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jun19\", \"Jul19\", \"Aug19\", \"Sep19\", \"Oct19\", \"Nov19\", \"Dec19\"],\n        datasets: [{\n          label: \"Companies\",\n          //   fillColor: \"rgba(220,220,220,0.2)\",\n          // fillColor: \"rgb(0.56,0.93,0.56)\",\n          // strokeColor: \"rgba(220,220,220,1)\",\n          // pointColor: \"rgba(220,220,220,1)\",\n          // pointStrokeColor: \"#fff\",\n          // pointHighlightFill: \"green\",\n          // pointHighlightStroke: \"rgba(220,220,220,1)\",\n          data: [0, 70, 32, 100, 64, 80, 30]\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comp-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      width: \"740\",\n      height: \"200\",\n      \"background-color\": \"hsla(290,100%,50%,0.3)\",\n      ref: this.refViolet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aftabchaudhary/Desktop/sci-code-challenge/nextgen-analytics-page-challenge/src/VioletChart.jsx"],"names":["React","Component","Chart","VioletChart","refViolet","createRef","componentDidMount","violetChartRef","current","getContext","type","data","labels","datasets","label","options","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,OAAO,YAAP;AACA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDG,SADiD,GACrCJ,KAAK,CAACK,SAAN,EADqC;AAAA;;AAGjDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,cAAc,GAAG,KAAKH,SAAL,CAAeI,OAAf,CAAuBC,UAAvB,CAAkC,IAAlC,CAAvB;AAEA,QAAIP,KAAJ,CAAUK,cAAV,EAA0B;AACtBG,MAAAA,IAAI,EAAE,MADgB;AAEtBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,CAFN;AAGFC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,WADT;AAGA;AACE;AACA;AACA;AACA;AACA;AACA;AACAH,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAVR,SADQ;AAHR,OAFgB;AAoBtBI,MAAAA,OAAO,EAAE,CACL;AADK;AApBa,KAA1B;AAwBH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,SADP;AACiB,MAAA,KAAK,EAAC,KADvB;AAC6B,MAAA,MAAM,EAAC,KADpC;AAC0C,0BAAkB,wBAD5D;AAEI,MAAA,GAAG,EAAE,KAAKZ,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAxCgD","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"chart.js\";\n// import Chart from \"chart.min.js\";\nimport './App.scss';\nexport default class VioletChart extends Component {\n  refViolet = React.createRef();\n  \n  componentDidMount() {\n      const violetChartRef = this.refViolet.current.getContext(\"2d\");\n      \n      new Chart(violetChartRef, {\n          type: \"line\",\n          data: {\n              //Bring in data\n              labels: [\"Jun19\", \"Jul19\", \"Aug19\", \"Sep19\", \"Oct19\", \"Nov19\", \"Dec19\"],\n              datasets: [\n                {\n                  label: \"Companies\",\n                    \n                //   fillColor: \"rgba(220,220,220,0.2)\",\n                  // fillColor: \"rgb(0.56,0.93,0.56)\",\n                  // strokeColor: \"rgba(220,220,220,1)\",\n                  // pointColor: \"rgba(220,220,220,1)\",\n                  // pointStrokeColor: \"#fff\",\n                  // pointHighlightFill: \"green\",\n                  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n                  data: [0, 70, 32, 100, 64, 80, 30]\n                },\n              ]\n          },\n          options: {\n              //Customize chart options\n          }\n      });\n  }\n  render() {\n      return (\n          <div className=\"comp-container\">\n              <canvas\n                  id=\"myChart\" width=\"740\" height=\"200\" background-color= \"hsla(290,100%,50%,0.3)\"\n                  ref={this.refViolet}\n              />\n          </div>\n      )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}